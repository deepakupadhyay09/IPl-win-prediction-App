{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"background_save":true},"executionInfo":{"elapsed":2298,"status":"ok","timestamp":1702361785786,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"pTcFxjYqqiIk"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","\n","#plotting\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","#model building\n","from sklearn.model_selection import train_test_split\n","from sklearn.compose import ColumnTransformer\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.pipeline import Pipeline\n","from sklearn import metrics"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"R6I46mO1r_VK"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":452},"executionInfo":{"elapsed":549,"status":"ok","timestamp":1702362015626,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"EbnZ9efDqxnB"},"outputs":[{"data":{"text/html":["\n","  \u003cdiv id=\"df-1ba59b52-84ec-47ec-8980-8bb74a8cb6c3\" class=\"colab-df-container\"\u003e\n","    \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eid\u003c/th\u003e\n","      \u003cth\u003eseason\u003c/th\u003e\n","      \u003cth\u003ecity\u003c/th\u003e\n","      \u003cth\u003edate\u003c/th\u003e\n","      \u003cth\u003eteam1\u003c/th\u003e\n","      \u003cth\u003eteam2\u003c/th\u003e\n","      \u003cth\u003etoss_winner\u003c/th\u003e\n","      \u003cth\u003etoss_decision\u003c/th\u003e\n","      \u003cth\u003eresult\u003c/th\u003e\n","      \u003cth\u003edl_applied\u003c/th\u003e\n","      \u003cth\u003ewinner\u003c/th\u003e\n","      \u003cth\u003ewin_by_runs\u003c/th\u003e\n","      \u003cth\u003ewin_by_wickets\u003c/th\u003e\n","      \u003cth\u003eplayer_of_match\u003c/th\u003e\n","      \u003cth\u003evenue\u003c/th\u003e\n","      \u003cth\u003eumpire1\u003c/th\u003e\n","      \u003cth\u003eumpire2\u003c/th\u003e\n","      \u003cth\u003eumpire3\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e2017\u003c/td\u003e\n","      \u003ctd\u003eHyderabad\u003c/td\u003e\n","      \u003ctd\u003e2017-04-05\u003c/td\u003e\n","      \u003ctd\u003eSunrisers Hyderabad\u003c/td\u003e\n","      \u003ctd\u003eRoyal Challengers Bangalore\u003c/td\u003e\n","      \u003ctd\u003eRoyal Challengers Bangalore\u003c/td\u003e\n","      \u003ctd\u003efield\u003c/td\u003e\n","      \u003ctd\u003enormal\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eSunrisers Hyderabad\u003c/td\u003e\n","      \u003ctd\u003e35\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eYuvraj Singh\u003c/td\u003e\n","      \u003ctd\u003eRajiv Gandhi International Stadium, Uppal\u003c/td\u003e\n","      \u003ctd\u003eAY Dandekar\u003c/td\u003e\n","      \u003ctd\u003eNJ Llong\u003c/td\u003e\n","      \u003ctd\u003eNaN\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e2017\u003c/td\u003e\n","      \u003ctd\u003ePune\u003c/td\u003e\n","      \u003ctd\u003e2017-04-06\u003c/td\u003e\n","      \u003ctd\u003eMumbai Indians\u003c/td\u003e\n","      \u003ctd\u003eRising Pune Supergiant\u003c/td\u003e\n","      \u003ctd\u003eRising Pune Supergiant\u003c/td\u003e\n","      \u003ctd\u003efield\u003c/td\u003e\n","      \u003ctd\u003enormal\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eRising Pune Supergiant\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003e7\u003c/td\u003e\n","      \u003ctd\u003eSPD Smith\u003c/td\u003e\n","      \u003ctd\u003eMaharashtra Cricket Association Stadium\u003c/td\u003e\n","      \u003ctd\u003eA Nand Kishore\u003c/td\u003e\n","      \u003ctd\u003eS Ravi\u003c/td\u003e\n","      \u003ctd\u003eNaN\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e3\u003c/td\u003e\n","      \u003ctd\u003e2017\u003c/td\u003e\n","      \u003ctd\u003eRajkot\u003c/td\u003e\n","      \u003ctd\u003e2017-04-07\u003c/td\u003e\n","      \u003ctd\u003eGujarat Lions\u003c/td\u003e\n","      \u003ctd\u003eKolkata Knight Riders\u003c/td\u003e\n","      \u003ctd\u003eKolkata Knight Riders\u003c/td\u003e\n","      \u003ctd\u003efield\u003c/td\u003e\n","      \u003ctd\u003enormal\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eKolkata Knight Riders\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003e10\u003c/td\u003e\n","      \u003ctd\u003eCA Lynn\u003c/td\u003e\n","      \u003ctd\u003eSaurashtra Cricket Association Stadium\u003c/td\u003e\n","      \u003ctd\u003eNitin Menon\u003c/td\u003e\n","      \u003ctd\u003eCK Nandan\u003c/td\u003e\n","      \u003ctd\u003eNaN\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e4\u003c/td\u003e\n","      \u003ctd\u003e2017\u003c/td\u003e\n","      \u003ctd\u003eIndore\u003c/td\u003e\n","      \u003ctd\u003e2017-04-08\u003c/td\u003e\n","      \u003ctd\u003eRising Pune Supergiant\u003c/td\u003e\n","      \u003ctd\u003eKings XI Punjab\u003c/td\u003e\n","      \u003ctd\u003eKings XI Punjab\u003c/td\u003e\n","      \u003ctd\u003efield\u003c/td\u003e\n","      \u003ctd\u003enormal\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eKings XI Punjab\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003e6\u003c/td\u003e\n","      \u003ctd\u003eGJ Maxwell\u003c/td\u003e\n","      \u003ctd\u003eHolkar Cricket Stadium\u003c/td\u003e\n","      \u003ctd\u003eAK Chaudhary\u003c/td\u003e\n","      \u003ctd\u003eC Shamshuddin\u003c/td\u003e\n","      \u003ctd\u003eNaN\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e2017\u003c/td\u003e\n","      \u003ctd\u003eBangalore\u003c/td\u003e\n","      \u003ctd\u003e2017-04-08\u003c/td\u003e\n","      \u003ctd\u003eRoyal Challengers Bangalore\u003c/td\u003e\n","      \u003ctd\u003eDelhi Daredevils\u003c/td\u003e\n","      \u003ctd\u003eRoyal Challengers Bangalore\u003c/td\u003e\n","      \u003ctd\u003ebat\u003c/td\u003e\n","      \u003ctd\u003enormal\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eRoyal Challengers Bangalore\u003c/td\u003e\n","      \u003ctd\u003e15\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eKM Jadhav\u003c/td\u003e\n","      \u003ctd\u003eM Chinnaswamy Stadium\u003c/td\u003e\n","      \u003ctd\u003eNaN\u003c/td\u003e\n","      \u003ctd\u003eNaN\u003c/td\u003e\n","      \u003ctd\u003eNaN\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","    \u003cdiv class=\"colab-df-buttons\"\u003e\n","\n","  \u003cdiv class=\"colab-df-container\"\u003e\n","    \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ba59b52-84ec-47ec-8980-8bb74a8cb6c3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\"\u003e\n","    \u003cpath d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","\n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","    \u003cscript\u003e\n","      const buttonEl =\n","        document.querySelector('#df-1ba59b52-84ec-47ec-8980-8bb74a8cb6c3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1ba59b52-84ec-47ec-8980-8bb74a8cb6c3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","\n","\u003cdiv id=\"df-a981feee-1528-4dcd-8176-e55888ed578a\"\u003e\n","  \u003cbutton class=\"colab-df-quickchart\" onclick=\"quickchart('df-a981feee-1528-4dcd-8176-e55888ed578a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\"\u003e\n","\n","\u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\"\u003e\n","    \u003cg\u003e\n","        \u003cpath d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/\u003e\n","    \u003c/g\u003e\n","\u003c/svg\u003e\n","  \u003c/button\u003e\n","\n","\u003cstyle\u003e\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","\u003c/style\u003e\n","\n","  \u003cscript\u003e\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() =\u003e {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a981feee-1528-4dcd-8176-e55888ed578a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  \u003c/script\u003e\n","\u003c/div\u003e\n","\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n"],"text/plain":["   id  season       city        date                        team1  \\\n","0   1    2017  Hyderabad  2017-04-05          Sunrisers Hyderabad   \n","1   2    2017       Pune  2017-04-06               Mumbai Indians   \n","2   3    2017     Rajkot  2017-04-07                Gujarat Lions   \n","3   4    2017     Indore  2017-04-08       Rising Pune Supergiant   \n","4   5    2017  Bangalore  2017-04-08  Royal Challengers Bangalore   \n","\n","                         team2                  toss_winner toss_decision  \\\n","0  Royal Challengers Bangalore  Royal Challengers Bangalore         field   \n","1       Rising Pune Supergiant       Rising Pune Supergiant         field   \n","2        Kolkata Knight Riders        Kolkata Knight Riders         field   \n","3              Kings XI Punjab              Kings XI Punjab         field   \n","4             Delhi Daredevils  Royal Challengers Bangalore           bat   \n","\n","   result  dl_applied                       winner  win_by_runs  \\\n","0  normal           0          Sunrisers Hyderabad           35   \n","1  normal           0       Rising Pune Supergiant            0   \n","2  normal           0        Kolkata Knight Riders            0   \n","3  normal           0              Kings XI Punjab            0   \n","4  normal           0  Royal Challengers Bangalore           15   \n","\n","   win_by_wickets player_of_match                                      venue  \\\n","0               0    Yuvraj Singh  Rajiv Gandhi International Stadium, Uppal   \n","1               7       SPD Smith    Maharashtra Cricket Association Stadium   \n","2              10         CA Lynn     Saurashtra Cricket Association Stadium   \n","3               6      GJ Maxwell                     Holkar Cricket Stadium   \n","4               0       KM Jadhav                      M Chinnaswamy Stadium   \n","\n","          umpire1        umpire2 umpire3  \n","0     AY Dandekar       NJ Llong     NaN  \n","1  A Nand Kishore         S Ravi     NaN  \n","2     Nitin Menon      CK Nandan     NaN  \n","3    AK Chaudhary  C Shamshuddin     NaN  \n","4             NaN            NaN     NaN  "]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["matches = pd.read_csv('matches.csv')\n","deliveries = pd.read_csv('deliveries.csv')\n","matches.head()"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":30,"status":"ok","timestamp":1702362112523,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"o2815v-3sFHr"},"outputs":[{"data":{"text/plain":["756"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["len(matches)"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":621,"status":"ok","timestamp":1702362132959,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"U8dEKlYTsGR-"},"outputs":[{"data":{"text/plain":["id                   0\n","season               0\n","city                 7\n","date                 0\n","team1                0\n","team2                0\n","toss_winner          0\n","toss_decision        0\n","result               0\n","dl_applied           0\n","winner               4\n","win_by_runs          0\n","win_by_wickets       0\n","player_of_match      4\n","venue                0\n","umpire1              2\n","umpire2              2\n","umpire3            637\n","dtype: int64"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["matches.isnull().sum()"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":767,"status":"ok","timestamp":1702362151758,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"BjSigPZrsMGb"},"outputs":[{"data":{"text/plain":["match_id                 0\n","inning                   0\n","batting_team             0\n","bowling_team             0\n","over                     0\n","ball                     0\n","batsman                  0\n","non_striker              0\n","bowler                   0\n","is_super_over            0\n","wide_runs                0\n","bye_runs                 0\n","legbye_runs              0\n","noball_runs              0\n","penalty_runs             0\n","batsman_runs             0\n","extra_runs               0\n","total_runs               0\n","player_dismissed    170244\n","dismissal_kind      170244\n","fielder             172630\n","dtype: int64"]},"execution_count":18,"metadata":{},"output_type":"execute_result"}],"source":["deliveries.isnull().sum()"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23,"status":"ok","timestamp":1702362179715,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"MgbKaD7msP1d"},"outputs":[],"source":["#creating a list of columns and removing unnecessary columns from the list\n","list1 = matches.columns.to_list()\n","remove_from_list = ['id', 'date', 'toss_winner', 'toss_decision', 'winner',\n","                    'win_by_runs', 'player_of_match', 'venue',\n","                    'umpire1', 'umpire2', 'umpire3']\n","\n","for i in range(len(remove_from_list)):\n","    list1.remove(remove_from_list[i])\n","\n"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1702362189950,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"a9SMnyx4sYIi"},"outputs":[{"name":"stdout","output_type":"stream","text":["The unique values in season are:  [2017 2008 2009 2010 2011 2012 2013 2014 2015 2016 2018 2019]\n","The unique values in city are:  ['Hyderabad' 'Pune' 'Rajkot' 'Indore' 'Bangalore' 'Mumbai' 'Kolkata'\n"," 'Delhi' 'Chandigarh' 'Kanpur' 'Jaipur' 'Chennai' 'Cape Town'\n"," 'Port Elizabeth' 'Durban' 'Centurion' 'East London' 'Johannesburg'\n"," 'Kimberley' 'Bloemfontein' 'Ahmedabad' 'Cuttack' 'Nagpur' 'Dharamsala'\n"," 'Kochi' 'Visakhapatnam' 'Raipur' 'Ranchi' 'Abu Dhabi' 'Sharjah' nan\n"," 'Mohali' 'Bengaluru']\n","The unique values in team1 are:  ['Sunrisers Hyderabad' 'Mumbai Indians' 'Gujarat Lions'\n"," 'Rising Pune Supergiant' 'Royal Challengers Bangalore'\n"," 'Kolkata Knight Riders' 'Delhi Daredevils' 'Kings XI Punjab'\n"," 'Chennai Super Kings' 'Rajasthan Royals' 'Deccan Chargers'\n"," 'Kochi Tuskers Kerala' 'Pune Warriors' 'Rising Pune Supergiants'\n"," 'Delhi Capitals']\n","The unique values in team2 are:  ['Royal Challengers Bangalore' 'Rising Pune Supergiant'\n"," 'Kolkata Knight Riders' 'Kings XI Punjab' 'Delhi Daredevils'\n"," 'Sunrisers Hyderabad' 'Mumbai Indians' 'Gujarat Lions' 'Rajasthan Royals'\n"," 'Chennai Super Kings' 'Deccan Chargers' 'Pune Warriors'\n"," 'Kochi Tuskers Kerala' 'Rising Pune Supergiants' 'Delhi Capitals']\n","The unique values in result are:  ['normal' 'tie' 'no result']\n","The unique values in dl_applied are:  [0 1]\n","The unique values in win_by_wickets are:  [ 0  7 10  6  9  4  8  5  2  3  1]\n"]}],"source":["for i in list1:\n","    print('The unique values in', i, 'are: ', matches[i].unique())"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"background_save":true},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1702362208232,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"GD7Z3vDPscfm"},"outputs":[],"source":["list2 = deliveries.columns.to_list()\n","remove_from_list2 = ['match_id', 'batsman','inning', 'non_striker',\n","                     'bowler', 'player_dismissed', 'fielder']\n","\n","for i in range(len(remove_from_list2)):\n","    list2.remove(remove_from_list2[i])"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1702362232554,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"RxtszOhBsftA"},"outputs":[{"name":"stdout","output_type":"stream","text":["The unique values in batting_team are:  ['Sunrisers Hyderabad' 'Royal Challengers Bangalore' 'Mumbai Indians'\n"," 'Rising Pune Supergiant' 'Gujarat Lions' 'Kolkata Knight Riders'\n"," 'Kings XI Punjab' 'Delhi Daredevils' 'Chennai Super Kings'\n"," 'Rajasthan Royals' 'Deccan Chargers' 'Kochi Tuskers Kerala'\n"," 'Pune Warriors' 'Rising Pune Supergiants' 'Delhi Capitals']\n","The unique values in bowling_team are:  ['Royal Challengers Bangalore' 'Sunrisers Hyderabad'\n"," 'Rising Pune Supergiant' 'Mumbai Indians' 'Kolkata Knight Riders'\n"," 'Gujarat Lions' 'Kings XI Punjab' 'Delhi Daredevils'\n"," 'Chennai Super Kings' 'Rajasthan Royals' 'Deccan Chargers'\n"," 'Kochi Tuskers Kerala' 'Pune Warriors' 'Rising Pune Supergiants'\n"," 'Delhi Capitals']\n","The unique values in over are:  [ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20]\n","The unique values in ball are:  [1 2 3 4 5 6 7 8 9]\n","The unique values in is_super_over are:  [0 1]\n","The unique values in wide_runs are:  [0 2 1 5 3 4]\n","The unique values in bye_runs are:  [0 1 4 2 3]\n","The unique values in legbye_runs are:  [0 1 2 5 3 4]\n","The unique values in noball_runs are:  [0 1 2 5 3]\n","The unique values in penalty_runs are:  [0 5]\n","The unique values in batsman_runs are:  [0 4 1 6 3 2 5 7]\n","The unique values in extra_runs are:  [0 2 1 4 5 3 7]\n","The unique values in total_runs are:  [ 0  4  2  1  6  3  5  7 10  8]\n","The unique values in dismissal_kind are:  [nan 'caught' 'bowled' 'run out' 'lbw' 'caught and bowled' 'stumped'\n"," 'retired hurt' 'hit wicket' 'obstructing the field']\n"]}],"source":["for i in list2:\n","    print('The unique values in', i, 'are: ', deliveries[i].unique())\n"]},{"cell_type":"markdown","metadata":{"id":"M_z-bTklsntd"},"source":["Data Preprocessing"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":478},"executionInfo":{"elapsed":26,"status":"ok","timestamp":1702362247812,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"yJ6ig3B4sjyT"},"outputs":[{"name":"stderr","output_type":"stream","text":["\u003cipython-input-23-76dd7eca7930\u003e:4: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  totalrun_df=deliveries.groupby(['match_id','inning']).sum()['total_runs'].reset_index()\n"]},{"data":{"text/html":["\n","  \u003cdiv id=\"df-20072295-7124-4996-98a8-d9ae65f81c24\" class=\"colab-df-container\"\u003e\n","    \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ematch_id\u003c/th\u003e\n","      \u003cth\u003einning\u003c/th\u003e\n","      \u003cth\u003etotal_runs\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e207\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e172\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e184\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e187\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e3\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e183\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e...\u003c/th\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1523\u003c/th\u003e\n","      \u003ctd\u003e11413\u003c/td\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e170\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1524\u003c/th\u003e\n","      \u003ctd\u003e11414\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e155\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1525\u003c/th\u003e\n","      \u003ctd\u003e11414\u003c/td\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e162\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1526\u003c/th\u003e\n","      \u003ctd\u003e11415\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e152\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1527\u003c/th\u003e\n","      \u003ctd\u003e11415\u003c/td\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e157\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003cp\u003e1528 rows × 3 columns\u003c/p\u003e\n","\u003c/div\u003e\n","    \u003cdiv class=\"colab-df-buttons\"\u003e\n","\n","  \u003cdiv class=\"colab-df-container\"\u003e\n","    \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20072295-7124-4996-98a8-d9ae65f81c24')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\"\u003e\n","    \u003cpath d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","\n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","    \u003cscript\u003e\n","      const buttonEl =\n","        document.querySelector('#df-20072295-7124-4996-98a8-d9ae65f81c24 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-20072295-7124-4996-98a8-d9ae65f81c24');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","\n","\u003cdiv id=\"df-9512b143-48cd-4f1b-bb64-004f792da7c3\"\u003e\n","  \u003cbutton class=\"colab-df-quickchart\" onclick=\"quickchart('df-9512b143-48cd-4f1b-bb64-004f792da7c3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\"\u003e\n","\n","\u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\"\u003e\n","    \u003cg\u003e\n","        \u003cpath d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/\u003e\n","    \u003c/g\u003e\n","\u003c/svg\u003e\n","  \u003c/button\u003e\n","\n","\u003cstyle\u003e\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","\u003c/style\u003e\n","\n","  \u003cscript\u003e\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() =\u003e {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9512b143-48cd-4f1b-bb64-004f792da7c3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  \u003c/script\u003e\n","\u003c/div\u003e\n","\n","  \u003cdiv id=\"id_1aa4b6a8-83be-469d-93b8-24e7d713b762\"\u003e\n","    \u003cstyle\u003e\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    \u003c/style\u003e\n","    \u003cbutton class=\"colab-df-generate\" onclick=\"generateWithVariable('totalrun_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","    \u003cscript\u003e\n","      (() =\u003e {\n","      const buttonEl =\n","        document.querySelector('#id_1aa4b6a8-83be-469d-93b8-24e7d713b762 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () =\u003e {\n","        google.colab.notebook.generateWithVariable('totalrun_df');\n","      }\n","      })();\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n"],"text/plain":["      match_id  inning  total_runs\n","0            1       1         207\n","1            1       2         172\n","2            2       1         184\n","3            2       2         187\n","4            3       1         183\n","...        ...     ...         ...\n","1523     11413       2         170\n","1524     11414       1         155\n","1525     11414       2         162\n","1526     11415       1         152\n","1527     11415       2         157\n","\n","[1528 rows x 3 columns]"]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["# grouping the 1st innings,2nd innings score in a particular matchid\n","# lets say match id = 1,so inning 1 score = 207,inning 2 score = 172\n","\n","totalrun_df=deliveries.groupby(['match_id','inning']).sum()['total_runs'].reset_index()\n","\n","totalrun_df"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1702362274963,"user":{"displayName":"Aakash Malhotra 919","userId":"01912447124750700328"},"user_tz":-330},"id":"-fK7QXdUsrd2"},"outputs":[{"name":"stderr","output_type":"stream","text":["\u003cipython-input-24-8961f06a5d73\u003e:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  totalrun_df['total_runs'] = totalrun_df['total_runs'].apply(lambda x:x+1)#to get target\n"]},{"data":{"text/html":["\n","  \u003cdiv id=\"df-a0a829d7-0a91-4704-afd7-111a77356c11\" class=\"colab-df-container\"\u003e\n","    \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ematch_id\u003c/th\u003e\n","      \u003cth\u003einning\u003c/th\u003e\n","      \u003cth\u003etotal_runs\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e208\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e185\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e3\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e184\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e6\u003c/th\u003e\n","      \u003ctd\u003e4\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e164\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e8\u003c/th\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e158\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e...\u003c/th\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1518\u003c/th\u003e\n","      \u003ctd\u003e11347\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e144\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1520\u003c/th\u003e\n","      \u003ctd\u003e11412\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e137\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1522\u003c/th\u003e\n","      \u003ctd\u003e11413\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e172\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1524\u003c/th\u003e\n","      \u003ctd\u003e11414\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e156\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1526\u003c/th\u003e\n","      \u003ctd\u003e11415\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e153\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003cp\u003e756 rows × 3 columns\u003c/p\u003e\n","\u003c/div\u003e\n","    \u003cdiv class=\"colab-df-buttons\"\u003e\n","\n","  \u003cdiv class=\"colab-df-container\"\u003e\n","    \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0a829d7-0a91-4704-afd7-111a77356c11')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\"\u003e\n","    \u003cpath d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","\n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","    \u003cscript\u003e\n","      const buttonEl =\n","        document.querySelector('#df-a0a829d7-0a91-4704-afd7-111a77356c11 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a0a829d7-0a91-4704-afd7-111a77356c11');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","\n","\u003cdiv id=\"df-713624f7-8637-4707-980a-e56640a5189c\"\u003e\n","  \u003cbutton class=\"colab-df-quickchart\" onclick=\"quickchart('df-713624f7-8637-4707-980a-e56640a5189c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\"\u003e\n","\n","\u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\"\u003e\n","    \u003cg\u003e\n","        \u003cpath d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/\u003e\n","    \u003c/g\u003e\n","\u003c/svg\u003e\n","  \u003c/button\u003e\n","\n","\u003cstyle\u003e\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","\u003c/style\u003e\n","\n","  \u003cscript\u003e\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() =\u003e {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-713624f7-8637-4707-980a-e56640a5189c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  \u003c/script\u003e\n","\u003c/div\u003e\n","\n","  \u003cdiv id=\"id_d4df9e37-11bc-43c8-9a46-78eaa4608f06\"\u003e\n","    \u003cstyle\u003e\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    \u003c/style\u003e\n","    \u003cbutton class=\"colab-df-generate\" onclick=\"generateWithVariable('totalrun_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\"\u003e\n","\n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/\u003e\n","  \u003c/svg\u003e\n","    \u003c/button\u003e\n","    \u003cscript\u003e\n","      (() =\u003e {\n","      const buttonEl =\n","        document.querySelector('#id_d4df9e37-11bc-43c8-9a46-78eaa4608f06 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () =\u003e {\n","        google.colab.notebook.generateWithVariable('totalrun_df');\n","      }\n","      })();\n","    \u003c/script\u003e\n","  \u003c/div\u003e\n","\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n"],"text/plain":["      match_id  inning  total_runs\n","0            1       1         208\n","2            2       1         185\n","4            3       1         184\n","6            4       1         164\n","8            5       1         158\n","...        ...     ...         ...\n","1518     11347       1         144\n","1520     11412       1         137\n","1522     11413       1         172\n","1524     11414       1         156\n","1526     11415       1         153\n","\n","[756 rows x 3 columns]"]},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":["#capturing only the first innings, because we will be predicting the second innings\n","#Also we are changing total runs into targets by using the lambda function\n","\n","totalrun_df = totalrun_df[totalrun_df['inning']==1]\n","totalrun_df['total_runs'] = totalrun_df['total_runs'].apply(lambda x:x+1)#to get target\n","totalrun_df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k7X8fMxrsvov"},"outputs":[],"source":["match_df = matches.merge(totalrun_df[['match_id','total_runs']],\n","                       left_on='id',right_on='match_id')\n","\n","match_df"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"qaP-0j8csyun"},"outputs":[{"data":{"text/plain":["array(['Sunrisers Hyderabad', 'Mumbai Indians', 'Gujarat Lions',\n","       'Rising Pune Supergiant', 'Royal Challengers Bangalore',\n","       'Kolkata Knight Riders', 'Delhi Daredevils', 'Kings XI Punjab'],\n","      dtype=object)"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["match_df['team1'].unique()\n"]}],"metadata":{"colab":{"authorship_tag":"ABX9TyNmp86lFMoqdR92GbtgdvQ+","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}